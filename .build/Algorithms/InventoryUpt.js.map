{
  "version": 3,
  "sources": ["../../Algorithms/InventoryUpt.ts"],
  "sourcesContent": ["function updateInventory(arr1: [number, string][], arr2: [number, string][]): [number, string][] {\n  const inventoryMap: Map<string, number> = new Map();\n\n  // Update quantities in the inventory map\n  for (const [quantity, item] of [...arr1, ...arr2]) {\n    inventoryMap.set(item, (inventoryMap.get(item) || 0) + quantity);\n  }\n\n  const newInventory: [number, string][] = Array.from(inventoryMap, ([item, quantity]) => [quantity, item]);\n\n  // Sort the new inventory array alphabetically\n  newInventory.sort((a, b) => a[1].localeCompare(b[1]));\n\n  return newInventory;\n}\n\n// Example inventory lists\nconst curInv: [number, string][] = [\n  [21, \"Bowling Ball\"],\n  [2, \"Dirty Sock\"],\n  [1, \"Hair Pin\"],\n  [5, \"Microphone\"],\n];\n\nconst newInv: [number, string][] = [\n  [2, \"Hair Pin\"],\n  [3, \"Half-Eaten Apple\"],\n  [67, \"Bowling Ball\"],\n  [7, \"Toothpaste\"],\n];\n\nconst updatedInventory: [number, string][] = updateInventory(curInv, newInv);\nconsole.log(updatedInventory);\n"],
  "mappings": ";AAAA,SAAS,gBAAgB,MAA0B,MAA8C;AAC/F,QAAM,eAAoC,oBAAI,IAAI;AAGlD,aAAW,CAAC,UAAU,IAAI,KAAK,CAAC,GAAG,MAAM,GAAG,IAAI,GAAG;AACjD,iBAAa,IAAI,OAAO,aAAa,IAAI,IAAI,KAAK,KAAK,QAAQ;AAAA,EACjE;AAEA,QAAM,eAAmC,MAAM,KAAK,cAAc,CAAC,CAAC,MAAM,QAAQ,MAAM,CAAC,UAAU,IAAI,CAAC;AAGxG,eAAa,KAAK,CAAC,GAAG,MAAM,EAAE,GAAG,cAAc,EAAE,EAAE,CAAC;AAEpD,SAAO;AACT;AAGA,MAAM,SAA6B;AAAA,EACjC,CAAC,IAAI,cAAc;AAAA,EACnB,CAAC,GAAG,YAAY;AAAA,EAChB,CAAC,GAAG,UAAU;AAAA,EACd,CAAC,GAAG,YAAY;AAClB;AAEA,MAAM,SAA6B;AAAA,EACjC,CAAC,GAAG,UAAU;AAAA,EACd,CAAC,GAAG,kBAAkB;AAAA,EACtB,CAAC,IAAI,cAAc;AAAA,EACnB,CAAC,GAAG,YAAY;AAClB;AAEA,MAAM,mBAAuC,gBAAgB,QAAQ,MAAM;AAC3E,QAAQ,IAAI,gBAAgB;",
  "names": []
}
